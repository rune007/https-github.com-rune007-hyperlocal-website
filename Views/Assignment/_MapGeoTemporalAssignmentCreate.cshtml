@model HLWebRole.Models.CreateGeoTemporalAssignmentModel
@*My Map implementation is based on modyfying code I found in the book:
Haack/Hanselman/Guthrie/Conery, "Professional ASP.NET MVC 1", Willey Publishing, USA 2009, p. 146 -  156.*@
<script src="http://dev.virtualearth.net/mapcontrol/mapcontrol.ashx?v=6.2" type="text/javascript"></script>
<script src="../../Scripts/map-find-location.js" type="text/javascript"></script>
<div id="theMap" style="position: relative; width: 750px; height: 500px; left: 0px;
    top: 0px; border: 1px solid;">
</div>
<script type="text/javascript">

try {
        /******************** Geocoding against Bing Maps Service (uses the script map-find-location.js) *********************/
        $(document).ready
        (
            function () {

                // Below I am setting the Latitude / Longitude fields to an arbitrary value inside Danish territory.
                // I need to do that because upon user registration (User/Register view) the initial values of those
                // fields will be 0 and this will cause a small flicker of an error message from the Remote Validation attribute
                // on the UserModels Latitude field:
                // [Remote("IsLatLongWithinDenmark", "SpatialQuery", AdditionalFields = "Longitude", HttpMethod = "POST")]
                // By setting the values to a Danish position, like below, we avoid seeing this small flicker of an error message.
                // Otherwise, setting the values like below has no consequence. Because typing an address in the Address field
                // will cause the Latitude / Longitude fields to be updated, and entering an address is a required for validation.
                $("#Latitude").val(55.7580);
                $("#Longitude").val(12.4090);            

                $("#Address").blur
                (
                    function (evt) {

                        var address = jQuery.trim($("#Address").val());
                        if (address.length < 1)
                            return;

                        FindAddressOnMap(address);

                        /* This validates our Latitude field (Remote validation checking whether Lat/Long are within Danish territory.) */
                        jQuery('form').validate().element("#Latitude");
                    }
                );
            }
       );
        /******************** End Geocoding against Bing Maps Service (uses the script map-find-location.js) *********************/
   

        $(document).ready(function() {

            var latitude = @(Model.Latitude)
            var longitude = @(Model.Longitude)

            if ((latitude == 0) || (longitude == 0))
                LoadMap();
            else
                LoadMap(latitude, longitude, mapLoaded);
        });
  
      
       function mapLoaded() {

            var title = '';
            var address = '';
    
            LoadPin(center, title, address);
            map.SetZoomLevel(14);
        } 
      

       // Handling the shape.onenddrag event for the draggable pushpin. 
       function EndDragHandler(e) {
       var location = e.LatLong;
       var lat = location.Latitude;
       var long = location.Longitude;

        $("#Latitude").val(lat);
        $("#Longitude").val(long);

        /* This validates our Latitude field (Remote validation checking whether Lat/Long are within Danish territory. */
        jQuery('form').validate().element("#Latitude");
    };

    }
    catch (err) {
        var s = document.querySelector('#system-message'); s.innerHTML = typeof msg == 'string' ? msg : err; s.className = 'error';
    }

</script>
