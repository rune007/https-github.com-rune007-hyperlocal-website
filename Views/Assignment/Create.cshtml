@model HLWebRole.Models.AssignmentModel
@{
    ViewBag.Title = "Create Assignment";
    Layout = "~/Views/Shared/_LayoutUserHome.cshtml";
}
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
@*jQuery DatePicker plugin*@
<link href="@Url.Content("~/Content/themes/base/jquery.ui.all.css")" rel="stylesheet" type="text/css" />
<link href="@Url.Content("~/Content/themes/base/jquery.ui.base.css")" rel="stylesheet" type="text/css" />
<link href="@Url.Content("~/Content/themes/base/jquery.ui.datepicker.css")" rel="stylesheet" type="text/css" />
<script src="@Url.Content("~/Scripts/jquery-ui-1.8.11.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/EditorHookup.js")" type="text/javascript"></script>
@*jQuery Uploadify file uploader plugin*@
<link href="@Url.Content("~/Scripts/uploadify/uploadify.css")" rel="stylesheet" type="text/css" />
<script src="@Url.Content("~/Scripts/uploadify/jquery.uploadify.v2.1.4.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/uploadify/swfobject.js")" type="text/javascript"></script>
<div id="one-column">
    @using (Html.BeginForm("Create", "Assignment", FormMethod.Post))
    {
        @Html.ValidationSummary(true)
        <fieldset>
            <legend>Create Assignment</legend>
            <div class="editor-label">
                @Html.LabelFor(model => model.Title)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Title)<br />
                @Html.ValidationMessageFor(model => model.Title)
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.Description)
            </div>
            <div class="editor-field">
                @Html.TextAreaFor(model => model.Description, 6, 44, null)<br />
                @Html.ValidationMessageFor(model => model.Description)
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.ExpiryDate)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.ExpiryDate)<br />
                @Html.ValidationMessageFor(model => model.ExpiryDate)
            </div>
            @Html.Label("Add Assignment Photo:")<br />
            <div id="fileuploader">
            </div>
            <div id="mediaProcessingGif">
                <img src="/Content/images/processingMedia.gif" alt="x" width="150" />
            </div>
            <p>
                <input type="button" class="button" id="btnSave" value="Create Assignment" />
            </p>
        </fieldset>
    }
</div>
<script type="text/javascript">

    // We use the "system-message" div to communicate error messages to the UI in case something goes wrong, I have an SystemMessageModel with the property
    // "SystemMessage", which is used to transport the error message from the controller to the view.
    var systemMessageDiv = $("#system-message");
    systemMessageDiv.hide();

    // Displays the error message through the "system-message" div.
    function ShowSystemMessage(systemMessage) {
        systemMessageDiv.text(systemMessage);
        systemMessageDiv.addClass("error");
        systemMessageDiv.show();
    }

    var mediaProcessingGif = $("#mediaProcessingGif");
    mediaProcessingGif.hide();

    /* This flag tell us whether Uploadify has any files to upload, in case of a file is added to Uploadify's queue of files to upload, the
    'onSelectOnce' event will be fired and set the noFilesToUpload flag to false. */
    var noFilesToUpload = true;
    var assignmentId;


    /*********************** Uploadify File Uploader plugin **********************************/
    $(window).load(
    function () {
        $("#fileuploader").uploadify({
            'uploader': '@Url.Content("/Scripts/uploadify/uploadify.swf")',
            'cancelImg': '/Scripts/uploadify/cancel.png',
            'buttonText': 'Browse For File',
            'script': '@Url.Action("Upload")',
            'folder': '/uploads',
            'scriptData': { 'hostItemId': assignmentId },
            'onAllComplete': function (event, data) { window.location = "/Assignment/" + assignmentId; },
            'onError': function (a, b, c, d) {
                if (d.type === "File Size")
                    alert("The File: " + c.name + " Violates the File Size Limit, which is: " + Math.round(d.info / (1024 * 1024)) + "MB, Please Remove the File!")
            },
            'onSelectOnce': function (event, data) { noFilesToUpload = false; },
            'fileDesc': 'Media Files',
            'fileExt': '*.jpg;*.jpeg;',
            'sizeLimit': 27000000,
            'multi': false,
            'auto': false
        });
        /*********************** End Uploadify File Uploader plugin **********************************/

        $("#btnSave").click
        (
            function () {

                /* Because we are posting the form asynchronously we need to enforce validation with the code just below. */
                var isFormValid = $('form').validate().form();
                if (isFormValid) {
                    var url = $("form").attr("action");
                    var inputData = $("form").serialize();
                    mediaProcessingGif.show();
                    $.post(url, inputData, function (data) {
                        // Hiding eventual old error messages.
                        systemMessageDiv.hide();

                        if (data != null) {

                            // In case of error we show an error message.
                            if (data.SystemMessage != null) {
                                ShowSystemMessage(data.SystemMessage);
                                mediaProcessingGif.hide();
                                return;
                            }

                            assignmentId = data.AssignmentID;
                            $('#fileuploader').uploadifySettings("scriptData", { 'hostItemId': assignmentId });

                            $('#fileuploader').uploadifyUpload();
                            /* The noFilesToUpload flag determines how we are being redirected to the Details view after processing form input.
                            If noFilesToUpload is false, we are being redirected to the Details view, via Uploadify's onAllComplete event.
                            If noFilesToUpload is true, we are being redirected to the Details view via the code just below. */
                            if (noFilesToUpload) {
                                if (assignmentId != null) {
                                    window.location = "/Assignment/" + assignmentId;
                                }
                            }
                        };
                    });
                }

            }
        );
    }
);

</script>
