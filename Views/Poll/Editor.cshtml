@model HLWebRole.Models.CreatePollModel
@{
    ViewBag.Title = "Manage";
    var manageModel = (HLWebRole.Models.ManagePollModel)ViewBag.ManageModel;
    Layout = "~/Views/Shared/_LayoutUserHome.cshtml";
}
@*    In this page we actually render two input forms: 
    - "create-form", which allows the User to create a new Poll,
    - "manage-form", which allows the User to navigate to Polls and manage them. 
    In order to be able to be able to distinguish similar fields of the two forms I am appending the fields with a "Create" or a "Manage.
    A view can only be strongly typed to one model, this view is strongly typed to CreatePollModel. In order to get the ManageModel into
    the view as well, we transport it with ViewBag, this means that ids which are generated by the DOM prepends the field ids with
    the name of the ViewBag variable "manageModel", thus the ids of the ManageModel become like "manageModel_AreaIdentifierManage" the
    ids of the CreatePollModel becomes like "AreaIdentifierCreate".*@
<h2>
    Manage</h2>
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<link href="../../Content/themes/base/jquery-ui-1.8.5.custom.css" rel="stylesheet"
    type="text/css" />
<script src="../../Scripts/jquery-ui-1.8.5.custom.min.js" type="text/javascript"></script>
<script type="text/javascript">
    /* Autocomplete for the AreaIdentifierCreate field on "create-form"*/
    $(function () {
        $("#AreaIdentifierCreate").autocomplete({
            source: "/poll/areaidentifiers"
        });
    });
    /* Autocomplete for the AreaIdentifierManage field on "manage-form"*/
    $(function () {
        $("#manageModel_AreaIdentifierManage").autocomplete({
            source: "/poll/areaidentifiers"
        });
    });
</script>
<div id="wrapper-div">
    <div id="two-columns-same-size-left">
        @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "create-form" }))
        {
            @Html.ValidationSummary(true)
            <fieldset>
                <legend>Create Poll</legend>
                <div class="editor-label">
                    <h2>
                        Enter Poll Question:</h2>
                </div>
                <div class="editor-label">
                    @Html.LabelFor(model => model.QuestionText)
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.QuestionText)<br />
                    @Html.ValidationMessageFor(model => model.QuestionText)
                </div>
                <div class="editor-label">
                    @Html.LabelFor(model => model.TypeIDCreate)
                </div>
                <div class="editor-field">
                    <div id="create-poll-list">
                        @Html.DropDownListFor(model => model.TypeIDCreate, Model.PollSelectListCreate, "Select Poll Type")<br />
                    </div>
                    @Html.ValidationMessageFor(model => model.TypeIDCreate)
                </div>
                <div class="editor-label">
                    @Html.LabelFor(model => model.AreaIdentifierCreate)
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.AreaIdentifierCreate)<br />
                    @Html.ValidationMessageFor(model => model.AreaIdentifierCreate)
                </div>
                <p>
                    <input type="button" class="button" id="btnCreate" value="Create Poll" />
                </p>
            </fieldset>
        }
    </div>
    <div id="two-columns-same-size-right">
        @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "manage-form" }))
        {
            @Html.ValidationSummary(true)
            <fieldset>
                <legend>Manage Polls</legend>
                <div class="editor-label">
                    @Html.LabelFor(model => manageModel.TypeIDManage)
                </div>
                <div class="editor-field">
                    <div id="manage-poll-list">
                        @Html.DropDownListFor(model => manageModel.TypeIDManage, manageModel.PollSelectListManage, "Select Poll Type")<br />
                    </div>
                    @Html.ValidationMessageFor(model => manageModel.TypeIDManage)
                </div>
                <div class="editor-label">
                    @Html.LabelFor(model => manageModel.AreaIdentifierManage)
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => manageModel.AreaIdentifierManage)<br />
                    @Html.ValidationMessageFor(model => manageModel.AreaIdentifierManage)
                </div>
                <p>
                    <input type="button" class="button" id="btnManage" value="Go to Polls" />
                </p>
            </fieldset>
        }
    </div>
</div>
<script type="text/javascript">
    /* In this page we actually render two input forms: 
    - "create-form", which allows the User to create a new Poll,
    - "manage-form", which allows the User to navigate to Polls and manage them. 
    In order to be able to be able to distinguish similar fields of the two forms I am appending the fields with a "Create" or a "Manage.
    A view can only be strongly typed to one model, this view is strongly typed to CreatePollModel. In order to get the ManageModel into
    the view as well, we transport it with ViewBag, this means that ids which are generated by the DOM prepends the field ids with
    the name of the ViewBag variable "manageModel", thus the ids of the ManageModel become like "manageModel_AreaIdentifierManage" the
    ids of the CreatePollModel becomes like "AreaIdentifierCreate".   */

    $(document).ready(function () {

        /***************************************************** "create-form" **********************************************/
        /* This determines what kind of Poll we are dealing with, it can be Country, Region, Municipality or Postal Code*/
        var selectedValueCreate;
        /* This can be a Region (e.g. "Sjælland"), a Municipality (e.g. "Vordingborg")or a PostalCode. (e.g. "2920 Gentofte")*/
        var areaIdentifierCreate;

        /* The selection was changed in the drop down list*/
        $("#create-poll-list").change(function () {
            /* The selectedValue determines what data our autocomplete textbox 
            is fed. It can be Regions, Municipalities or PostalCodes*/
            selectedValueCreate = $("#create-poll-list option:selected").val();

            switch (selectedValueCreate) {
                case 'Region':
                    /* Clearing the AreaIdentifierCreate textbox. */
                    $("#AreaIdentifierCreate").val('');
                    break;
                case 'Municipality':
                    $("#AreaIdentifierCreate").val('');
                    break;
                case 'Postal Code':
                    $("#AreaIdentifierCreate").val('');
                    break;
                case 'Country':
                    /* Country don't need an AreaIdentifier, so we disable it by putting a message in the AreaIdentifier text box. */
                    $("#AreaIdentifierCreate").val("Country don't need Area Identifier - Just press Create Now");
                    $("#AreaIdentifierCreate").valid();
                    break;
                default:
                    /* Making sure the form is valid. */
                    $('#create-form').validate().form();
            }

            /* The selectedValueCreate determines what data our autocomplete textbox 
            is fed. It can be Regions, Municipalities or PostalCodes*/
            $.post
            (
			    "/Poll/PollType",
			    { selectedValue: selectedValueCreate },
                null,
			    "json"
		    );
        });


        $("#btnCreate").click
        (
            function () {
                areaIdentifierCreate = $("#AreaIdentifierCreate").val();
                /* Making sure the form is valid. */
                var isFormValid = $('#create-form').validate().form();
                if (isFormValid) {
                    switch (selectedValueCreate) {
                        case 'Region':
                            $("#create-form").attr("action", "/Poll/RegionCreate");
                            $('#create-form').submit();
                            break;
                        case 'Municipality':
                            $("#create-form").attr("action", "/Poll/MunicipalityCreate");
                            $('#create-form').submit();
                            break;
                        case 'Postal Code':
                            $("#create-form").attr("action", "/Poll/PostalCodeCreate");
                            $('#create-form').submit();
                            break;
                        case 'Country':
                            $("#create-form").attr("action", "/Poll/CountryCreate");
                            $('#create-form').submit();
                            break;
                        default:
                    }
                }
            });

        /**********************************************End "create-form" **********************************************/


        /***************************************************** "manage-form" **********************************************/
        /* This determines what kind of Poll we are dealing with, it can be Country, Region, Municipality or Postal Code*/
        var selectedValueManage;
        /* This can be a Region (e.g. "Sjælland"), a Municipality (e.g. "Vordingborg")or a PostalCode. (e.g. "2920 Gentofte")*/
        var areaIdentifierManage;

        /* The selection was changed in the drop down list*/
        $("#manage-poll-list").change(function () {
            /* The selectedValue determines what data our autocomplete textbox 
            is fed. It can be Regions, Municipalities or PostalCodes*/
            selectedValueManage = $("#manage-poll-list option:selected").val();

            switch (selectedValueManage) {
                case 'Region':
                    /* Clearing the AreaIdentifierCreate textbox. */
                    $("#manageModel_AreaIdentifierManage").val('');
                    break;
                case 'Municipality':
                    $("#manageModel_AreaIdentifierManage").val('');
                    break;
                case 'Postal Code':
                    $("#manageModel_AreaIdentifierManage").val('');
                    break;
                case 'Country':
                    /* Country don't need an AreaIdentifier, so we disable it by putting a message in the AreaIdentifier text box. */
                    $("#manageModel_AreaIdentifierManage").val("Country don't need Area Identifier - Just press Go To Polls Now");
                    $("#manageModel_AreaIdentifierManage").valid();
                    break;
                default:
                    /* Making sure the form is valid. */
                    $('#manage-form').validate().form();
            }

            /* The selectedValueCreate determines what data our autocomplete textbox 
            is fed. It can be Regions, Municipalities or PostalCodes*/
            $.post
            (
			    "/Poll/PollType",
			    { selectedValue: selectedValueManage },
                null,
			    "json"
		    );
        });


        $("#btnManage").click
        (
            function () {
                areaIdentifierManage = $("#manageModel_AreaIdentifierManage").val();
                /* Making sure the form is valid. */
                var isFormValid = $('#manage-form').validate().form();
                if (isFormValid) {
                    switch (selectedValueManage) {
                        case 'Region':
                            $("#manage-form").attr("action", "/Poll/RegionManage");
                            $('#manage-form').submit();
                            break;
                        case 'Municipality':
                            $("#manage-form").attr("action", "/Poll/MunicipalityManage");
                            $('#manage-form').submit();
                            break;
                        case 'Postal Code':
                            $("#manage-form").attr("action", "/Poll/PostalCodeManage");
                            $('#manage-form').submit();
                            break;
                        case 'Country':
                            $("#manage-form").attr("action", "/Poll/CountryManage");
                            $('#manage-form').submit();
                            break;
                        default:
                    }
                }
            });
    });

    /**********************************************End "manage-form" **********************************************/
</script>

